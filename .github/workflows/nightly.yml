name: Nightly Build

on:
  schedule:
    - cron: "0 0 * * *" # Run at midnight UTC every day
  workflow_dispatch: # Allow manual trigger

jobs:
  nightly-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"
          cache: true

      - name: Install just
        uses: extractions/setup-just@v1

      - name: Generate Amazon SP-API Clients and Models
        run: just generate

      - name: Linters
        run: just lint

      - name: Build and package
        run: just package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nightly-build
          path: |
            dist/*.tar.gz
            dist/*.zip
          retention-days: 7

      - name: Delete existing nightly release
        continue-on-error: true # Don't fail if the release doesn't exist yet
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Attempting to delete existing nightly tag and release..."
          gh release delete nightly --yes || echo "No existing release found"
          git tag -d nightly || echo "No local tag found"
          git push --delete origin nightly || echo "No remote tag found"

      - name: Create new nightly tag and release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating new nightly tag..."
          BUILD_DATE=$(date +%Y-%m-%d)
          COMMIT_SHA=$(git rev-parse --short HEAD)

          echo "Tagging commit ${COMMIT_SHA} as nightly..."
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a nightly -m "Nightly build ${BUILD_DATE}"

          echo "Pushing tag to remote..."
          git push origin nightly

          echo "Creating GitHub release..."
          gh release create nightly \
            --title "Nightly Build ${BUILD_DATE}" \
            --notes "Automated nightly build for commit ${COMMIT_SHA}" \
            --prerelease \
            dist/*.tar.gz \
            dist/*.zip

          echo "Nightly release created successfully!"

permissions:
  contents: write
  packages: read
